<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>廖辉&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.liaohui.info/"/>
  <updated>2018-12-20T03:22:10.886Z</updated>
  <id>https://blog.liaohui.info/</id>
  
  <author>
    <name>liaohui</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTTP状态码(HTTP Status Code)</title>
    <link href="https://blog.liaohui.info/2018/12/20/httpStatusCode/"/>
    <id>https://blog.liaohui.info/2018/12/20/httpStatusCode/</id>
    <published>2018-12-20T02:45:33.000Z</published>
    <updated>2018-12-20T03:22:10.886Z</updated>
    
    <content type="html"><![CDATA[<h4 id="消息-临时响应"><a href="#消息-临时响应" class="headerlink" title="消息(临时响应)"></a>消息(临时响应)</h4><blockquote><p>这一类型的状态码，代表请求已被接受，需要继续处理。这类响应是临时响应，只包含状态行和某些可选的响应头信息，并以空行结束。由于 HTTP/1.0 协议中没有定义任何 1xx 状态码，所以除非在某些试验条件下，服务器禁止向此类客户端发送 1xx 响应。</p></blockquote><ul><li><p>100 Continue</p><blockquote><p>客户端应当继续发送请求。这个临时响应是用来通知客户端它的部分请求已经被服务器接收，且仍未被拒绝。客户端应当继续发送请求的剩余部分，或者如果请求已经完成，忽略这个响应。服务器必须在请求完成后向客户端发送一个最终响应。</p></blockquote></li><li><p>101 Switching Protocols</p><blockquote><p>服务器已经理解了客户端的请求，并将通过Upgrade 消息头通知客户端采用不同的协议来完成这个请求。在发送完这个响应最后的空行后，服务器将会切换到在Upgrade 消息头中定义的那些协议。<br>只有在切换新的协议更有好处的时候才应该采取类似措施。例如，切换到新的HTTP 版本比旧版本更有优势，或者切换到一个实时且同步的协议以传送利用此类特性的资源。</p></blockquote></li><li><p>102 Processing</p><blockquote><p>由WebDAV（RFC 2518）扩展的状态码，代表处理将被继续执行。</p></blockquote></li></ul><h4 id="成功"><a href="#成功" class="headerlink" title="成功"></a>成功</h4><blockquote><p>这一类型的状态码，代表请求已成功被服务器接收、理解、并接受。</p></blockquote><ul><li>200 OK<blockquote><p>请求已成功，请求所希望的响应头或数据体将随此响应返回。出现此状态码是表示正常状态。</p></blockquote></li><li>201 Created<blockquote><p>请求已经被实现，而且有一个新的资源已经依据请求的需要而建立，且其 URI 已经随Location 头信息返回。假如需要的资源无法及时建立的话，应当返回 ‘202 Accepted’。</p></blockquote></li><li>202 Accepted<blockquote><p>服务器已接受请求，但尚未处理。正如它可能被拒绝一样，最终该请求可能会也可能不会被执行。在异步操作的场合下，没有比发送这个状态码更方便的做法了。<br>返回202状态码的响应的目的是允许服务器接受其他过程的请求（例如某个每天只执行一次的基于批处理的操作），而不必让客户端一直保持与服务器的连接直到批处理操作全部完成。在接受请求处理并返回202状态码的响应应当在返回的实体中包含一些指示处理当前状态的信息，以及指向处理状态监视器或状态预测的指针，以便用户能够估计操作是否已经完成。</p></blockquote></li><li>203 Non-Authoritative Information<blockquote><p>服务器已成功处理了请求，但返回的实体头部元信息不是在原始服务器上有效的确定集合，而是来自本地或者第三方的拷贝。当前的信息可能是原始版本的子集或者超集。例如，包含资源的元数据可能导致原始服务器知道元信息的超集。使用此状态码不是必须的，而且只有在响应不使用此状态码便会返回200 OK的情况下才是合适的。</p></blockquote></li><li>204 No Content<blockquote><p>服务器成功处理了请求，但不需要返回任何实体内容，并且希望返回更新了的元信息。响应可能通过实体头部的形式，返回新的或更新后的元信息。如果存在这些头部信息，则应当与所请求的变量相呼应。<br>如果客户端是浏览器的话，那么用户浏览器应保留发送了该请求的页面，而不产生任何文档视图上的变化，即使按照规范新的或更新后的元信息应当被应用到用户浏览器活动视图中的文档。<br>由于204响应被禁止包含任何消息体，因此它始终以消息头后的第一个空行结尾。</p></blockquote></li><li>205 Reset Content<blockquote><p>服务器成功处理了请求，且没有返回任何内容。但是与204响应不同，返回此状态码的响应要求请求者重置文档视图。该响应主要是被用于接受用户输入后，立即重置表单，以便用户能够轻松地开始另一次输入。<br>与204响应一样，该响应也被禁止包含任何消息体，且以消息头后的第一个空行结束。</p></blockquote></li><li>206 Partial Content<blockquote><p>服务器已经成功处理了部分 GET 请求。类似于 FlashGet 或者迅雷这类的 HTTP下载工具都是使用此类响应实现断点续传或者将一个大文档分解为多个下载段同时下载。<br>该请求必须包含 Range 头信息来指示客户端希望得到的内容范围，并且可能包含 If-Range 来作为请求条件。<br>响应必须包含如下的头部域：<br>Content-Range 用以指示本次响应中返回的内容的范围；如果是 Content-Type 为 multipart/byteranges 的多段下载，则每一 multipart 段中都应包含 Content-Range 域用以指示本段的内容范围。假如响应中包含 Content-Length，那么它的数值必须匹配它返回的内容范围的真实字节数。<br>Date<br>ETag 和/或 Content-Location，假如同样的请求本应该返回200响应。<br>Expires, Cache-Control，和/或 Vary，假如其值可能与之前相同变量的其他响应对应的值不同的话。<br>假如本响应请求使用了 If-Range 强缓存验证，那么本次响应不应该包含其他实体头；假如本响应的请求使用了 If-Range 弱缓存验证，那么本次响应禁止包含其他实体头；这避免了缓存的实体内容和更新了的实体头信息之间的不一致。否则，本响应就应当包含所有本应该返回200响应中应当返回的所有实体头部域。<br>假如 ETag 或 Last-Modified 头部不能精确匹配的话，则客户端缓存应禁止将206响应返回的内容与之前任何缓存过的内容组合在一起。</p></blockquote></li><li>207 Multi-Status<blockquote><p>由WebDAV(RFC 2518)扩展的状态码，代表之后的消息体将是一个XML消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。</p></blockquote></li></ul><h4 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h4><blockquote><p>这类状态码代表需要客户端采取进一步的操作才能完成请求。通常，这些状态码用来重定向，后续的请求地址（重定向目标）在本次响应的 Location 域中指明。<br>  当且仅当后续的请求所使用的方法是 GET 或者 HEAD 时，用户浏览器才可以在没有用户介入的情况下自动提交所需要的后续请求。客户端应当自动监测无限循环重定向（例如：A-&gt;A，或者A-&gt;B-&gt;C-&gt;A），因为这会导致服务器和客户端大量不必要的资源消耗。按照 HTTP/1.0 版规范的建议，浏览器不应自动访问超过5次的重定向。</p></blockquote><ul><li><p>300 Multiple Choices</p><blockquote><p>被请求的资源有一系列可供选择的回馈信息，每个都有自己特定的地址和浏览器驱动的商议信息。用户或浏览器能够自行选择一个首选的地址进行重定向。<br>除非这是一个 HEAD 请求，否则该响应应当包括一个资源特性及地址的列表的实体，以便用户或浏览器从中选择最合适的重定向地址。这个实体的格式由 Content-Type 定义的格式所决定。浏览器可能根据响应的格式以及浏览器自身能力，自动作出最合适的选择。当然，RFC 2616规范并没有规定这样的自动选择该如何进行。<br>如果服务器本身已经有了首选的回馈选择，那么在 Location 中应当指明这个回馈的 URI；浏览器可能会将这个 Location 值作为自动重定向的地址。此外，除非额外指定，否则这个响应也是可缓存的。</p></blockquote></li><li><p>301 Moved Permanently</p><blockquote><p>被请求的资源已永久移动到新位置，并且将来任何对此资源的引用都应该使用本响应返回的若干个 URI 之一。如果可能，拥有链接编辑功能的客户端应当自动把请求的地址修改为从服务器反馈回来的地址。除非额外指定，否则这个响应也是可缓存的。<br>新的永久性的URI 应当在响应的 Location 域中返回。除非这是一个 HEAD 请求，否则响应的实体中应当包含指向新的 URI 的超链接及简短说明。<br>如果这不是一个 GET 或者 HEAD 请求，因此浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。<br>注意：对于某些使用 HTTP/1.0 协议的浏览器，当它们发送的 POST 请求得到了一个301响应的话，接下来的重定向请求将会变成 GET 方式。</p></blockquote></li><li><p>302 Move temporarily</p><blockquote><p>请求的资源临时从不同的 URI响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在Cache-Control或Expires中进行了指定的情况下，这个响应才是可缓存的。<br>上文有提及。<br>如果这不是一个 GET 或者 HEAD 请求，那么浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。<br>注意：虽然RFC 1945和RFC 2068规范不允许客户端在重定向时改变请求的方法，但是很多现存的浏览器将302响应视作为303响应，并且使用 GET 方式访问在 Location 中规定的 URI，而无视原先请求的方法。状态码303和307被添加了进来，用以明确服务器期待客户端进行何种反应。</p></blockquote></li><li><p>303 See Other</p><blockquote><p>对应当前请求的响应可以在另一个 URI 上被找到，而且客户端应当采用 GET 的方式访问那个资源。这个方法的存在主要是为了允许由脚本激活的POST请求输出重定向到一个新的资源。这个新的 URI 不是原始资源的替代引用。同时，303响应禁止被缓存。当然，第二个请求（重定向）可能被缓存。<br>注意：许多 HTTP/1.1 版以前的浏览器不能正确理解303状态。如果需要考虑与这些浏览器之间的互动，302状态码应该可以胜任，因为大多数的浏览器处理302响应时的方式恰恰就是上述规范要求客户端处理303响应时应当做的。</p></blockquote></li><li><p>304 Not Modified</p><blockquote><p>如果客户端发送了一个带条件的 GET 请求且该请求已被允许，而文档的内容（自上次访问以来或者根据请求的条件）并没有改变，则服务器应当返回这个状态码。304响应禁止包含消息体，因此始终以消息头后的第一个空行结尾。<br>该响应必须包含以下的头信息：<br>Date，除非这个服务器没有时钟。假如没有时钟的服务器也遵守这些规则，那么代理服务器以及客户端可以自行将 Date 字段添加到接收到的响应头中去（正如RFC 2068中规定的一样），缓存机制将会正常工作。<br>ETag 和/或 Content-Location，假如同样的请求本应返回200响应。<br>Expires, Cache-Control，和/或Vary，假如其值可能与之前相同变量的其他响应对应的值不同的话。<br>假如本响应请求使用了强缓存验证，那么本次响应不应该包含其他实体头；否则（例如，某个带条件的 GET 请求使用了弱缓存验证），本次响应禁止包含其他实体头；这避免了缓存了的实体内容和更新了的实体头信息之间的不一致。<br>假如某个304响应指明了当前某个实体没有缓存，那么缓存系统必须忽视这个响应，并且重复发送不包含限制条件的请求。<br>假如接收到一个要求更新某个缓存条目的304响应，那么缓存系统必须更新整个条目以反映所有在响应中被更新的字段的值。</p></blockquote></li><li><p>305 Use Proxy</p><blockquote><p>被请求的资源必须通过指定的代理才能被访问。Location 域中将给出指定的代理所在的 URI 信息，接收者需要重复发送一个单独的请求，通过这个代理才能访问相应资源。只有原始服务器才能建立305响应。<br>注意：RFC 2068中没有明确305响应是为了重定向一个单独的请求，而且只能被原始服务器建立。忽视这些限制可能导致严重的安全后果。</p></blockquote></li><li><p>306 Switch Proxy</p><blockquote><p>在最新版的规范中，306状态码已经不再被使用。</p></blockquote></li><li><p>307 Temporary Redirect</p><blockquote><p>请求的资源临时从不同的URI 响应请求。<br>新的临时性的URI 应当在响应的 Location 域中返回。除非这是一个HEAD 请求，否则响应的实体中应当包含指向新的URI 的超链接及简短说明。因为部分浏览器不能识别307响应，因此需要添加上述必要信息以便用户能够理解并向新的 URI 发出访问请求。<br>如果这不是一个GET 或者 HEAD 请求，那么浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。</p></blockquote></li></ul><h4 id="请求错误"><a href="#请求错误" class="headerlink" title="请求错误"></a>请求错误</h4><blockquote><p>这类的状态码代表了客户端看起来可能发生了错误，妨碍了服务器的处理。除非响应的是一个 HEAD 请求，否则服务器就应该返回一个解释当前错误状况的实体，以及这是临时的还是永久性的状况。这些状态码适用于任何请求方法。浏览器应当向用户显示任何包含在此类错误响应中的实体内容。<br> 如果错误发生时客户端正在传送数据，那么使用TCP的服务器实现应当仔细确保在关闭客户端与服务器之间的连接之前，客户端已经收到了包含错误信息的数据包。如果客户端在收到错误信息后继续向服务器发送数据，服务器的TCP栈将向客户端发送一个重置数据包，以清除该客户端所有还未识别的输入缓冲，以免这些数据被服务器上的应用程序读取并干扰后者。</p></blockquote><ul><li><p>400 Bad Request</p><blockquote><ul><li>语义有误，当前请求无法被服务器理解。除非进行修改，否则客户端不应该重复提交这个请求。</li><li>请求参数有误。</li></ul></blockquote></li><li><p>401 Unauthorized</p><blockquote><p>当前请求需要用户验证。该响应必须包含一个适用于被请求资源的 WWW-Authenticate 信息头用以询问用户信息。客户端可以重复提交一个包含恰当的 Authorization 头信息的请求。如果当前请求已经包含了 Authorization 证书，那么401响应代表着服务器验证已经拒绝了那些证书。如果401响应包含了与前一个响应相同的身份验证询问，且浏览器已经至少尝试了一次验证，那么浏览器应当向用户展示响应中包含的实体信息，因为这个实体信息中可能包含了相关诊断信息。参见RFC 2617。</p></blockquote></li><li><p>402 Payment Required</p><blockquote><p>该状态码是为了将来可能的需求而预留的。</p></blockquote></li><li><p>403 Forbidden</p><blockquote><p>服务器已经理解请求，但是拒绝执行它。与401响应不同的是，身份验证并不能提供任何帮助，而且这个请求也不应该被重复提交。如果这不是一个 HEAD 请求，而且服务器希望能够讲清楚为何请求不能被执行，那么就应该在实体内描述拒绝的原因。当然服务器也可以返回一个404响应，假如它不希望让客户端获得任何信息。</p></blockquote></li><li><p>404 Not Found</p><blockquote><p>请求失败，请求所希望得到的资源未被在服务器上发现。没有信息能够告诉用户这个状况到底是暂时的还是永久的。假如服务器知道情况的话，应当使用410状态码来告知旧资源因为某些内部的配置机制问题，已经永久的不可用，而且没有任何可以跳转的地址。404这个状态码被广泛应用于当服务器不想揭示到底为何请求被拒绝或者没有其他适合的响应可用的情况下。出现这个错误的最有可能的原因是服务器端没有这个页面。</p></blockquote></li><li><p>405 Method Not Allowed</p><blockquote><p>请求行中指定的请求方法不能被用于请求相应的资源。该响应必须返回一个Allow 头信息用以表示出当前资源能够接受的请求方法的列表。<br>鉴于 PUT，DELETE 方法会对服务器上的资源进行写操作，因而绝大部分的网页服务器都不支持或者在默认配置下不允许上述请求方法，对于此类请求均会返回405错误。</p></blockquote></li><li><p>406 Not Acceptable</p><blockquote><p>请求的资源的内容特性无法满足请求头中的条件，因而无法生成响应实体。<br>除非这是一个 HEAD 请求，否则该响应就应当返回一个包含可以让用户或者浏览器从中选择最合适的实体特性以及地址列表的实体。实体的格式由 Content-Type 头中定义的媒体类型决定。浏览器可以根据格式及自身能力自行作出最佳选择。但是，规范中并没有定义任何作出此类自动选择的标准。</p></blockquote></li><li><p>407 Proxy Authentication Required</p><blockquote><p>与401响应类似，只不过客户端必须在代理服务器上进行身份验证。代理服务器必须返回一个 Proxy-Authenticate 用以进行身份询问。客户端可以返回一个 Proxy-Authorization 信息头用以验证。参见RFC 2617。</p></blockquote></li><li><p>408 Request Timeout</p><blockquote><p>请求超时。客户端没有在服务器预备等待的时间内完成一个请求的发送。客户端可以随时再次提交这一请求而无需进行任何更改。</p></blockquote></li><li><p>409 Conflict</p><blockquote><p>由于和被请求的资源的当前状态之间存在冲突，请求无法完成。这个代码只允许用在这样的情况下才能被使用：用户被认为能够解决冲突，并且会重新提交新的请求。该响应应当包含足够的信息以便用户发现冲突的源头。<br>冲突通常发生于对 PUT 请求的处理中。例如，在采用版本检查的环境下，某次 PUT 提交的对特定资源的修改请求所附带的版本信息与之前的某个（第三方）请求向冲突，那么此时服务器就应该返回一个409错误，告知用户请求无法完成。此时，响应实体中很可能会包含两个冲突版本之间的差异比较，以便用户重新提交归并以后的新版本。</p></blockquote></li><li><p>410 Gone</p><blockquote><p>被请求的资源在服务器上已经不再可用，而且没有任何已知的转发地址。这样的状况应当被认为是永久性的。如果可能，拥有链接编辑功能的客户端应当在获得用户许可后删除所有指向这个地址的引用。如果服务器不知道或者无法确定这个状况是否是永久的，那么就应该使用404状态码。除非额外说明，否则这个响应是可缓存的。</p></blockquote></li><li><p>410 响应的目的主要是帮助网站管理员维护网站，通知用户该资源已经不再可用，并且服务器拥有者希望所有指向这个资源的远端连接也被删除。这类事件在限时、增值服务中很普遍。同样，410响应也被用于通知客户端在当前服务器站点上，原本属于某个个人的资源已经不再可用。当然，是否需要把所有永久不可用的资源标记为’410 Gone’，以及是否需要保持此标记多长时间，完全取决于服务器拥有者。</p></li><li><p>411 Length Required</p><blockquote><p>服务器拒绝在没有定义 Content-Length 头的情况下接受请求。在添加了表明请求消息体长度的有效 Content-Length 头之后，客户端可以再次提交该请求。</p></blockquote></li><li><p>412 Precondition Failed</p><blockquote><p>服务器在验证在请求的头字段中给出先决条件时，没能满足其中的一个或多个。这个状态码允许客户端在获取资源时在请求的元信息（请求头字段数据）中设置先决条件，以此避免该请求方法被应用到其希望的内容以外的资源上。</p></blockquote></li><li><p>413 Request Entity Too Large</p><blockquote><p>服务器拒绝处理当前请求，因为该请求提交的实体数据大小超过了服务器愿意或者能够处理的范围。此种情况下，服务器可以关闭连接以免客户端继续发送此请求。<br>如果这个状况是临时的，服务器应当返回一个 Retry-After 的响应头，以告知客户端可以在多少时间以后重新尝试。</p></blockquote></li><li><p>414 Request-URI Too Long</p><blockquote><p>请求的URI 长度超过了服务器能够解释的长度，因此服务器拒绝对该请求提供服务。这比较少见，通常的情况包括：<br>本应使用POST方法的表单提交变成了GET方法，导致查询字符串（Query String）过长。<br>重定向URI “黑洞”，例如每次重定向把旧的 URI 作为新的 URI 的一部分，导致在若干次重定向后 URI 超长。<br>客户端正在尝试利用某些服务器中存在的安全漏洞攻击服务器。这类服务器使用固定长度的缓冲读取或操作请求的 URI，当 GET 后的参数超过某个数值后，可能会产生缓冲区溢出，导致任意代码被执行[1]。没有此类漏洞的服务器，应当返回414状态码。</p></blockquote></li><li><p>415 Unsupported Media Type</p><blockquote><p>对于当前请求的方法和所请求的资源，请求中提交的实体并不是服务器中所支持的格式，因此请求被拒绝。</p></blockquote></li><li><p>416 Requested Range Not Satisfiable</p><blockquote><p>如果请求中包含了 Range 请求头，并且 Range 中指定的任何数据范围都与当前资源的可用范围不重合，同时请求中又没有定义 If-Range 请求头，那么服务器就应当返回416状态码。<br>假如 Range 使用的是字节范围，那么这种情况就是指请求指定的所有数据范围的首字节位置都超过了当前资源的长度。服务器也应当在返回416状态码的同时，包含一个 Content-Range 实体头，用以指明当前资源的长度。这个响应也被禁止使用 multipart/byteranges 作为其 Content-Type。</p></blockquote></li><li><p>417 Expectation Failed</p><blockquote><p>在请求头 Expect 中指定的预期内容无法被服务器满足，或者这个服务器是一个代理服务器，它有明显的证据证明在当前路由的下一个节点上，Expect 的内容无法被满足。</p></blockquote></li><li><p>421 too many connections</p><blockquote><p>There are too many connections from your internet address<br>从当前客户端所在的IP地址到服务器的连接数超过了服务器许可的最大范围。通常，这里的IP地址指的是从服务器上看到的客户端地址（比如用户的网关或者代理服务器地址）。在这种情况下，连接数的计算可能涉及到不止一个终端用户。</p></blockquote></li><li><p>422 Unprocessable Entity</p><blockquote><p>请求格式正确，但是由于含有语义错误，无法响应。（RFC 4918 WebDAV）</p></blockquote></li><li><p>423 Locked</p><blockquote><p>当前资源被锁定。（RFC 4918 WebDAV）</p></blockquote></li><li><p>424 Failed Dependency</p><blockquote><p>由于之前的某个请求发生的错误，导致当前请求失败，例如 PROPPATCH。（RFC 4918 WebDAV）</p></blockquote></li><li><p>425 Unordered Collection</p><blockquote><p>在WebDav Advanced Collections 草案中定义，但是未出现在《WebDAV 顺序集协议》（RFC 3658）中。</p></blockquote></li><li><p>426 Upgrade Required</p><blockquote><p>客户端应当切换到TLS/1.0。（RFC 2817）</p></blockquote></li><li><p>449 Retry With</p><blockquote><p>由微软扩展，代表请求应当在执行完适当的操作后进行重试。</p></blockquote></li><li><p>451 Unavailable For Legal Reasons</p><blockquote><p>该请求因法律原因不可用。（RFC 7725）</p></blockquote></li></ul><h4 id="服务器错误"><a href="#服务器错误" class="headerlink" title="服务器错误"></a>服务器错误</h4><blockquote><p>（5、6字头）<br> 这类状态码代表了服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理。除非这是一个HEAD 请求，否则服务器应当包含一个解释当前错误状态以及这个状况是临时的还是永久的解释信息实体。浏览器应当向用户展示任何在当前响应中被包含的实体。<br> 这些状态码适用于任何响应方法。</p></blockquote><ul><li><p>500 Internal Server Error</p><blockquote><p>服务器遇到了一个未曾预料的状况，导致了它无法完成对请求的处理。一般来说，这个问题都会在服务器端的源代码出现错误时出现。</p></blockquote></li><li><p>501 Not Implemented</p><blockquote><p>服务器不支持当前请求所需要的某个功能。当服务器无法识别请求的方法，并且无法支持其对任何资源的请求。</p></blockquote></li><li><p>502 Bad Gateway</p><blockquote><p>作为网关或者代理工作的服务器尝试执行请求时，从上游服务器接收到无效的响应。</p></blockquote></li><li><p>503 Service Unavailable</p><blockquote><p>由于临时的服务器维护或者过载，服务器当前无法处理请求。这个状况是临时的，并且将在一段时间以后恢复。如果能够预计延迟时间，那么响应中可以包含一个 Retry-After 头用以标明这个延迟时间。如果没有给出这个 Retry-After 信息，那么客户端应当以处理500响应的方式处理它。<br>注意：503状态码的存在并不意味着服务器在过载的时候必须使用它。某些服务器只不过是希望拒绝客户端的连接。</p></blockquote></li><li><p>504 Gateway Timeout</p><blockquote><p>作为网关或者代理工作的服务器尝试执行请求时，未能及时从上游服务器（URI标识出的服务器，例如HTTP、FTP、LDAP）或者辅助服务器（例如DNS）收到响应。<br>注意：某些代理服务器在DNS查询超时时会返回400或者500错误</p></blockquote></li><li><p>505 HTTP Version Not Supported</p><blockquote><p>服务器不支持，或者拒绝支持在请求中使用的 HTTP 版本。这暗示着服务器不能或不愿使用与客户端相同的版本。响应中应当包含一个描述了为何版本不被支持以及服务器支持哪些协议的实体。</p></blockquote></li><li><p>506 Variant Also Negotiates</p><blockquote><p>由《透明内容协商协议》（RFC 2295）扩展，代表服务器存在内部配置错误：被请求的协商变元资源被配置为在透明内容协商中使用自己，因此在一个协商处理中不是一个合适的重点。</p></blockquote></li><li><p>507 Insufficient Storage</p><blockquote><p>服务器无法存储完成请求所必须的内容。这个状况被认为是临时的。WebDAV (RFC 4918)</p></blockquote></li><li><p>509 Bandwidth Limit Exceeded</p><blockquote><p>服务器达到带宽限制。这不是一个官方的状态码，但是仍被广泛使用。</p></blockquote></li><li><p>510 Not Extended</p><blockquote><p>获取资源所需要的策略并没有被满足。（RFC 2774）</p></blockquote></li><li><p>600 Unparseable Response Headers</p><blockquote><p>源站没有返回响应头部，只返回实体内容。 </p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      HTTP状态码(HTTP Status Code)
    
    </summary>
    
      <category term="技术" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP 常用函数</title>
    <link href="https://blog.liaohui.info/2018/12/13/php-sum-1/"/>
    <id>https://blog.liaohui.info/2018/12/13/php-sum-1/</id>
    <published>2018-12-13T07:46:54.000Z</published>
    <updated>2018-12-14T03:39:26.920Z</updated>
    
    <content type="html"><![CDATA[<h4 id="json-字符串编码解码"><a href="#json-字符串编码解码" class="headerlink" title="json 字符串编码解码"></a>json 字符串编码解码</h4><ul><li><a href="http://php.net/manual/zh/function.json-encode.php" target="_blank" rel="noopener">json_encode</a><blockquote><p>对变量进行 JSON 编码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string json_encode ( mixed $value [, int $options = <span class="number">0</span> [, int $depth = <span class="number">512</span> ]] )</span><br></pre></td></tr></table></figure></blockquote></li></ul><blockquote><p>返回字符串，包含了 value 值 JSON 形式的表示。<br>编码受传入的 options 参数影响，此外浮点值的编码依赖于 serialize_precision。</p><ul><li>value<br>待编码的 value ，除了resource 类型之外，可以为任何数据类型。<br>所有字符串数据的编码必须是 UTF-8。</li><li>options<br>由以下常量组成的二进制掩码： JSON_HEX_QUOT, JSON_HEX_TAG, JSON_HEX_AMP, JSON_HEX_APOS, JSON_NUMERIC_CHECK, JSON_PRETTY_PRINT, JSON_UNESCAPED_SLASHES, JSON_FORCE_OBJECT, JSON_PRESERVE_ZERO_FRACTION, JSON_UNESCAPED_UNICODE, JSON_PARTIAL_OUTPUT_ON_ERROR</li><li>depth<br>设置最大深度。 必须大于0</li></ul></blockquote><ul><li><a href="http://php.net/manual/zh/function.json-decode.php" target="_blank" rel="noopener">json_decode</a><blockquote><p>接受一个 JSON 编码的字符串并且把它转换为 PHP 变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed json_decode ( string $json [, bool $assoc = <span class="keyword">false</span> [, int $depth = <span class="number">512</span> [, int $options = <span class="number">0</span> ]]] )</span><br></pre></td></tr></table></figure></blockquote></li></ul><blockquote><ul><li>json<br>待解码的 json string 格式的字符串,这个函数仅能处理 UTF-8 编码的数据</li><li>assoc<br>当该参数为 TRUE 时，将返回 array 而非 object </li><li>depth<br>指定递归深度</li><li>options<br>JSON解码的掩码选项。 现在有两个支持的选项。 第一个是JSON_BIGINT_AS_STRING， 用于将大整数转为字符串而非默认的float类型。第二个是 JSON_OBJECT_AS_ARRAY， 与将assoc设置为 TRUE 有相同的效果。</li></ul></blockquote><ul><li><a href="http://php.net/manual/zh/function.json-last-error.php" target="_blank" rel="noopener">json_last_error</a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int json_last_error ( void )</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>如果有，返回 JSON 编码解码时最后发生的错误</p></blockquote><h4 id="变量处理函数"><a href="#变量处理函数" class="headerlink" title="变量处理函数"></a>变量处理函数</h4><ul><li><p><a href="http://php.net/manual/zh/function.boolval.php" target="_blank" rel="noopener">boolval</a></p><blockquote><p>获取变量的布尔值</p></blockquote></li><li><p><a href="http://php.net/manual/zh/function.doubleval.php" target="_blank" rel="noopener">doubleval</a>,<a href="http://php.net/manual/zh/function.floatval.php" target="_blank" rel="noopener">floatval</a></p></li><li><p><a href="http://php.net/manual/zh/function.intval.php" target="_blank" rel="noopener">intval</a></p></li><li><p><a href="http://php.net/manual/zh/function.get-defined-vars.php" target="_blank" rel="noopener">get_defined_vars</a></p><blockquote><p>此函数返回一个包含所有已定义变量列表的多维数组，这些变量包括环境变量、服务器变量和用户定义的变量</p></blockquote></li><li><p><a href="http://php.net/manual/zh/function.get-resource-type.php" target="_blank" rel="noopener">get_resource_type</a></p><blockquote><p>此函数返回一个字符串，用于表示传递给它的 resource 的类型。如果参数不是合法的 resource，将产生错误。</p></blockquote></li><li><p><a href="http://php.net/manual/zh/function.gettype.php" target="_blank" rel="noopener">gettype</a></p><blockquote><p>返回 PHP 变量的类型 var.<br>不要使用 gettype() 来测试某种类型，因为其返回的字符串在未来的版本中可能需要改变。此外，由于包含了字符串的比较，它的运行也是较慢的。使用 is_* 函数代替。</p></blockquote></li><li><p><a href="http://php.net/manual/zh/function.import-request-variables.php" target="_blank" rel="noopener">import_request_variables</a></p><blockquote><p>将 GET／POST／Cookie 变量导入到全局作用域中。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bool import_request_variables ( string $types [, string $prefix ] )</span><br></pre></td></tr></table></figure></blockquote></li><li><p><a href="http://php.net/manual/zh/function.empty.php" target="_blank" rel="noopener">empty</a></p><blockquote><p>检查一个变量是否为空<br>当一个变量并不存在，或者它的值等同于FALSE，那么它会被认为不存在。如果变量不存在的话，empty()并不会产生警告<br>当var存在，并且是一个非空非零的值时返回 FALSE 否则返回 TRUE<br>以下的东西被认为是空的：  </p><ul><li>“” (空字符串)</li><li>0 (作为整数的0)</li><li>0.0 (作为浮点数的0)</li><li>“0” (作为字符串的0)</li><li>NULL</li><li>FALSE</li><li>array() (一个空数组)</li><li>$var; (一个声明了，但是没有值的变量)</li></ul></blockquote></li><li><p><a href="http://php.net/manual/zh/function.is-array.php" target="_blank" rel="noopener">is_array</a></p><blockquote><p>检测变量是否是数组</p></blockquote></li><li><p><a href="http://php.net/manual/zh/function.is-bool.php" target="_blank" rel="noopener">is_bool</a></p></li><li><p><a href="http://php.net/manual/zh/function.is-callable.php" target="_blank" rel="noopener">is_callable</a></p><blockquote><p>验证变量的内容能否作为函数调用。 这可以检查包含有效函数名的变量，或者一个数组，包含了正确编码的对象以及函数名。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bool is_callable ( callable $name [, bool $syntax_only = <span class="keyword">false</span> [, string &amp;$callable_name ]] )</span><br></pre></td></tr></table></figure></blockquote></li><li><p><a href="http://php.net/manual/zh/function.is-countable.php" target="_blank" rel="noopener">is_countable</a></p><blockquote><p>Verify that the contents of a variable is an array or an object implementing Countable</p></blockquote></li><li><p><a href="http://php.net/manual/zh/function.is-double.php" target="_blank" rel="noopener">is_double</a>,<a href="http://php.net/manual/zh/function.is-float.php" target="_blank" rel="noopener">is_float</a>,<a href="http://php.net/manual/zh/function.is-real.php" target="_blank" rel="noopener">is_real</a></p><blockquote><p>is_real,is_double是 is_float() 的别名函数</p></blockquote></li><li><p><a href="http://php.net/manual/zh/function.is-int.php" target="_blank" rel="noopener">is_int</a>,<a href="http://php.net/manual/zh/function.is-integer.php" target="_blank" rel="noopener">is_integer</a>,<a href="http://php.net/manual/zh/function.is-long.php" target="_blank" rel="noopener">is_long</a></p><blockquote><p>is_integer,is_long 都是 is_int() 的别名函数</p></blockquote></li><li><p><a href="http://php.net/manual/zh/function.is-iterable.php" target="_blank" rel="noopener">is_iterable</a></p><blockquote><p>Verify that the contents of a variable is accepted by the iterable pseudo-type, i.e. that it is an array or an object implementing Traversable</p></blockquote></li><li><p><a href="http://php.net/manual/zh/function.is-null.php" target="_blank" rel="noopener">is_null</a></p></li><li><p><a href="http://php.net/manual/zh/function.is-numeric.php" target="_blank" rel="noopener">is_numeric</a></p><blockquote><p> 检测变量是否为数字或数字字符串</p></blockquote></li><li><p><a href="http://php.net/manual/zh/function.is-object.php" target="_blank" rel="noopener">is_object</a></p></li><li><p><a href="http://php.net/manual/zh/function.is-resource.php" target="_blank" rel="noopener">is_resource</a></p></li><li><p><a href="http://php.net/manual/zh/function.is-scalar.php" target="_blank" rel="noopener">is_scalar</a></p><blockquote><p>检测变量是否是一个标量,标量变量是指那些包含了 integer、float、string 或 boolean的变量，而 array、object 和 resource 则不是标量</p></blockquote></li><li><p><a href="http://php.net/manual/zh/function.is-string.php" target="_blank" rel="noopener">is_string</a></p></li><li><p><a href="http://php.net/manual/zh/function.isset.php" target="_blank" rel="noopener">isset</a></p><blockquote><p>检测变量是否已设置并且非 NULL</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bool <span class="keyword">isset</span> ( mixed $var [, mixed $... ] )</span><br></pre></td></tr></table></figure></blockquote></li></ul><blockquote><ul><li>null 字符（”\0”）并不等同于 PHP 的 NULL 常量</li><li>如果一次传入多个参数，那么 isset() 只有在全部参数都以被设置时返回 TRUE 计算过程从左至右，中途遇到没有设置的变量时就会立即停止</li></ul></blockquote><ul><li><p><a href="http://php.net/manual/zh/function.print-r.php" target="_blank" rel="noopener">print_r</a></p><blockquote><p>以人类易读的格式显示一个变量的信息</p></blockquote></li><li><p><a href="http://php.net/manual/zh/function.serialize.php" target="_blank" rel="noopener">serialize</a></p><blockquote><p>返回字符串，此字符串包含了表示 value 的字节流，可以存储于任何地方。<br>这有利于存储或传递 PHP 的值，同时不丢失其类型和结构,可处理除了 resource 之外的任何类型<br>当序列化对象时，PHP 将试图在序列动作之前调用该对象的成员函数 __sleep()。这样就允许对象在被序列化之前做任何清除操作</p></blockquote></li><li><p><a href="http://php.net/manual/zh/function.settype.php" target="_blank" rel="noopener">settype</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bool settype ( mixed &amp;$var , string $type )</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>将变量 var 的类型设置成 type</p></blockquote><ul><li><p><a href="http://php.net/manual/zh/function.strval.php" target="_blank" rel="noopener">strval</a></p><blockquote><p>返回 var 的 string 值,var 可以是任何标量类型。不能将 strval() 用于数组或对象</p></blockquote></li><li><p><a href="http://php.net/manual/zh/function.unserialize.php" target="_blank" rel="noopener">unserialize</a></p><blockquote><p>对单一的已序列化的变量进行操作，将其转换回 PHP 的值<br>若被解序列化的变量是一个对象，在成功地重新构造对象之后，PHP 会自动地试图去调用 __wakeup() 成员函数（如果存在的话）</p></blockquote></li><li><p><a href="http://php.net/manual/zh/function.unset.php" target="_blank" rel="noopener">unset</a></p><blockquote><p>销毁指定的变量<br>如果在函数中 unset() 一个全局变量，则只是局部变量被销毁，而在调用环境中的变量将保持调用 unset() 之前一样的值。<br>想在函数中 unset() 一个全局变量，可使用 $GLOBALS 数组来实现<br>unset() 一个通过引用传递的变量，则只是局部变量被销毁，而在调用环境中的变量将保持调用 unset() 之前一样的值。<br>如果在函数中 unset() 一个静态变量，那么在函数内部此静态变量将被销毁。但是，当再次调用此函数时，此静态变量将被复原为上次被销毁之前的值。</p></blockquote></li><li><p><a href="http://php.net/manual/zh/function.var-dump.php" target="_blank" rel="noopener">var_dump</a></p></li><li><p><a href="http://php.net/manual/zh/function.var-export.php" target="_blank" rel="noopener">var_export</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed var_export ( mixed $expression [, bool $return ] )</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>返回关于传递给该函数的变量的结构信息，它和 var_dump() 类似，不同的是其返回的表示是合法的 PHP 代码。<br>可以通过将函数的第二个参数设置为 TRUE，从而返回变量的表示。</p></blockquote><h4 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h4><ul><li><a href="http://php.net/manual/zh/function.trim.php" target="_blank" rel="noopener">trim</a><blockquote><p>去除字符串首尾处的空白字符（或者其他字符）</p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      json_decode,json_encode
    
    </summary>
    
      <category term="技术" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="编程语言" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="PHP" scheme="https://blog.liaohui.info/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu16.04安装最新版nodejs</title>
    <link href="https://blog.liaohui.info/2018/12/13/nodejs-1/"/>
    <id>https://blog.liaohui.info/2018/12/13/nodejs-1/</id>
    <published>2018-12-13T00:46:44.000Z</published>
    <updated>2018-12-13T00:58:56.405Z</updated>
    
    <content type="html"><![CDATA[<h4 id="更新ubuntu软件源"><a href="#更新ubuntu软件源" class="headerlink" title="更新ubuntu软件源"></a>更新ubuntu软件源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y python-software-properties software-properties-common</span><br><span class="line">sudo add-apt-repository ppa:chris-lea/node.js</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h4 id="安装-nodejs"><a href="#安装-nodejs" class="headerlink" title="安装 nodejs"></a>安装 nodejs</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt install nodejs-legacy</span><br><span class="line">sudo apt install npm</span><br></pre></td></tr></table></figure><h4 id="更新npm的包镜像源，方便快速下载"><a href="#更新npm的包镜像源，方便快速下载" class="headerlink" title="更新npm的包镜像源，方便快速下载"></a>更新npm的包镜像源，方便快速下载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line">sudo npm config list</span><br></pre></td></tr></table></figure><h4 id="全局安装n管理器-用于管理nodejs版本"><a href="#全局安装n管理器-用于管理nodejs版本" class="headerlink" title="全局安装n管理器(用于管理nodejs版本)"></a>全局安装n管理器(用于管理nodejs版本)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install n -g</span><br></pre></td></tr></table></figure><h4 id="安装最新的nodejs（stable版本）"><a href="#安装最新的nodejs（stable版本）" class="headerlink" title="安装最新的nodejs（stable版本）"></a>安装最新的nodejs（stable版本）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo n stable</span><br><span class="line">sudo node -v</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Ubuntu16.04安装最新版nodejs
    
    </summary>
    
      <category term="技术" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="nodejs" scheme="https://blog.liaohui.info/tags/nodejs/"/>
    
      <category term="ubuntu" scheme="https://blog.liaohui.info/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>TP5学习手记3(命令行)</title>
    <link href="https://blog.liaohui.info/2018/12/11/TP5Learn3/"/>
    <id>https://blog.liaohui.info/2018/12/11/TP5Learn3/</id>
    <published>2018-12-11T01:08:42.000Z</published>
    <updated>2018-12-12T04:31:53.830Z</updated>
    
    <content type="html"><![CDATA[<p>thinkphp 5.1 命令行参考<a href="https://www.kancloud.cn/manual/thinkphp5_1/354138" target="_blank" rel="noopener">官方文档</a></p><h4 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think version</span><br></pre></td></tr></table></figure><h4 id="生成模块"><a href="#生成模块" class="headerlink" title="生成模块"></a>生成模块</h4><ul><li><p>快速生成模块</p><blockquote><p>生成一个test模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think build --module <span class="built_in">test</span></span><br></pre></td></tr></table></figure></blockquote></li><li><p>批量生成模块</p><blockquote><p>需要定义规则文件build.php并放入应用目录下面,默认的框架的根目录下面自带了一个build.php示例参考文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think build</span><br></pre></td></tr></table></figure></blockquote></li></ul><h4 id="生成类文件"><a href="#生成类文件" class="headerlink" title="生成类文件"></a>生成类文件</h4><ul><li>生成控制器<blockquote><p>生成index模块的Blog控制器类库文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think make:controller index/Blog</span><br></pre></td></tr></table></figure></blockquote></li></ul><blockquote><p>生成index模块的Blog控制器类库文件,无内部方法，空框架<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think make:controller index/Blog --plain</span><br></pre></td></tr></table></figure></p></blockquote><ul><li><p>生成模型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think make:model index/Blog</span><br></pre></td></tr></table></figure></li><li><p>生成中间件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think make:middleware Auth</span><br></pre></td></tr></table></figure></li><li><p>创建验证器类</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;php think make:validate index/User</span><br></pre></td></tr></table></figure></li></ul><h4 id="生成类库映射文件"><a href="#生成类库映射文件" class="headerlink" title="生成类库映射文件"></a>生成类库映射文件</h4><blockquote><p>使用下面的指令生成类库映射文件，提高系统自动加载的性能<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;php think optimize:<span class="built_in">autoload</span></span><br></pre></td></tr></table></figure></p></blockquote><h4 id="清除缓存文件"><a href="#清除缓存文件" class="headerlink" title="清除缓存文件"></a>清除缓存文件</h4><ul><li><p>清除应用的缓存文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think clear</span><br></pre></td></tr></table></figure></li><li><p>清除某个指定目录下面的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think clear --path d:\www\tp5\runtime\<span class="built_in">log</span>\</span><br></pre></td></tr></table></figure></li><li><p>清除日志目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think clear --<span class="built_in">log</span></span><br></pre></td></tr></table></figure></li><li><p>清除日志目录并删除空目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think clear --<span class="built_in">log</span> --dir</span><br></pre></td></tr></table></figure></li><li><p>清除数据缓存目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think clear --cache</span><br></pre></td></tr></table></figure></li><li><p>清除数据缓存目录并删除空目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think clear --cache --dir</span><br></pre></td></tr></table></figure></li><li><p>清除路由缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think clear --route</span><br></pre></td></tr></table></figure></li></ul><h4 id="生成配置缓存"><a href="#生成配置缓存" class="headerlink" title="生成配置缓存"></a>生成配置缓存</h4><blockquote><p>为应用或者模块生成配置缓存文件<br>默认生成应用的配置缓存文件，调用后会在runtime目录下面生成init.php文件，生成配置缓存文件后，应用目录下面的config.phpcommon.php以及tags.php不会被加载，被runtime/init.php取代。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think optimize:config</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>成某个模块的配置缓存<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think optimize:config index</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="生成数据表字段缓存"><a href="#生成数据表字段缓存" class="headerlink" title="生成数据表字段缓存"></a>生成数据表字段缓存</h4><blockquote><p>字段缓存仅在部署模式下生效<br>生成数据表字段信息缓存，提升数据库查询的性能，避免多余的查询。</p><ul><li>常用指令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think optimize:schema</span><br></pre></td></tr></table></figure></li></ul></blockquote><ul><li><p>指定数据库生成字段缓存（必须有用户权限）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think optimize:schema --db demo</span><br></pre></td></tr></table></figure></li><li><p>根据模块来生成</p><blockquote><p>读取index模块的模型来生成数据表字段缓存,没有继承think\Model类的（抽象）模型类不会生成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think optimize:schema --module index</span><br></pre></td></tr></table></figure></blockquote></li><li><p>单独更新某个数据表的缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think optimize:schema --table think_user</span><br></pre></td></tr></table></figure></li><li><p>单独更新某个数据表的缓存(指定数据库)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think optimize:schema --table demo.think_user</span><br></pre></td></tr></table></figure></li></ul><h4 id="生成路由映射缓存"><a href="#生成路由映射缓存" class="headerlink" title="生成路由映射缓存"></a>生成路由映射缓存</h4><blockquote><p>路由映射缓存用于开启路由延迟解析的情况下，支持路由反解的URL生成，如果你没有开启路由延迟解析或者没有使用URL路由反解生成则不需要生成。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think optimize:route</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="输出并生成路由列表"><a href="#输出并生成路由列表" class="headerlink" title="输出并生成路由列表"></a>输出并生成路由列表</h4><ul><li><p>查看定义的路由列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think route:list</span><br></pre></td></tr></table></figure></li><li><p>不同的样式输出</p><blockquote><p>box 样式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think route:list box</span><br></pre></td></tr></table></figure></blockquote></li></ul><blockquote><p>box-double<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think route:list box-double</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>markdown<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think route:list markdown</span><br></pre></td></tr></table></figure></p></blockquote><ul><li>排序支持<blockquote><p>支持排序的字段名包括：rule、route、name、method和domain（全部小写）<br>按路由规则排序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think route:list -s rule</span><br></pre></td></tr></table></figure></blockquote></li></ul><blockquote><p>按请求类型排序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think route:list -s method</span><br></pre></td></tr></table></figure></p></blockquote><ul><li>输出详细信息<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think route:list -m</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      thinkphp 常用命令
    
    </summary>
    
      <category term="技术" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="thinkphp5" scheme="https://blog.liaohui.info/tags/thinkphp5/"/>
    
  </entry>
  
  <entry>
    <title>nginx 常用指令汇总1</title>
    <link href="https://blog.liaohui.info/2018/12/06/nginx-log/"/>
    <id>https://blog.liaohui.info/2018/12/06/nginx-log/</id>
    <published>2018-12-06T08:57:40.000Z</published>
    <updated>2018-12-07T09:12:48.945Z</updated>
    
    <content type="html"><![CDATA[<h4 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h4><ul><li><p>access_log (<a href="http://nginx.org/en/docs/http/ngx_http_log_module.html#access_log" target="_blank" rel="noopener">官网参考</a>)</p><blockquote><p>指定是否关闭日志，日志文件的路径、格式名称等等</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Syntax:access_log path [format [buffer=size] [gzip[=level]] [flush=time] [if=condition]];</span><br><span class="line">        access_log off;</span><br><span class="line">Default:access_log logs/access.log combined;</span><br><span class="line">Context:http, server, location, if in location, limit_except</span><br></pre></td></tr></table></figure></blockquote></li><li><p>log_format (<a href="http://nginx.org/en/docs/http/ngx_http_log_module.html#log_format" target="_blank" rel="noopener">官网参考</a>)</p><blockquote><p>设置一个日志格式，其名称可以用在指令 access_log 的参数</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Syntax:</span><br><span class="line">    log_format name [escape=default|json|none] string ...;</span><br><span class="line">Default:</span><br><span class="line">    log_format combined "...";</span><br><span class="line">Context:http</span><br></pre></td></tr></table></figure></blockquote></li></ul><h4 id="限制访问"><a href="#限制访问" class="headerlink" title="限制访问"></a>限制访问</h4><ul><li>allow （<a href="http://nginx.org/en/docs/http/ngx_http_access_module.html#allow" target="_blank" rel="noopener">官网参考</a>） <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Syntax:allow address | CIDR | unix: | all;</span><br><span class="line">Default:—</span><br><span class="line">Context:http, server, location, limit_except</span><br></pre></td></tr></table></figure></li></ul><p>&lt; Allows access for the specified network or address. If the special value unix: is specified (1.5.1), allows access for all UNIX-domain sockets.</p><ul><li>deny (<a href="http://nginx.org/en/docs/http/ngx_http_access_module.html#deny" target="_blank" rel="noopener">官网参考</a>) <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Syntax:deny address | CIDR | unix: | all;</span><br><span class="line">Default:—</span><br><span class="line">Context:http, server, location, limit_except</span><br></pre></td></tr></table></figure></li></ul><blockquote><ul><li>Denies access for the specified network or address. If the special value unix: is specified (1.5.1), denies access for all UNIX-domain sockets.</li><li>这里的 address 是与 nginx 直连的 remote_addr ,默认情况下，如果不修改 remote_addr 的默认值，其指向的是与nginx服务器直连的客户端的IP,如果是多层反代，需考虑替换 remote_addr ,否则限制访问的只是与 nginx 服务器直连的 下游 nginx 服务器。</li></ul></blockquote><ul><li>set_real_ip_from (<a href="http://nginx.org/en/docs/http/ngx_http_realip_module.html#set_real_ip_from" target="_blank" rel="noopener">官网参考</a>)<blockquote><p>这个指令需要启用模块 <a href="http://nginx.org/en/docs/http/ngx_http_realip_module.html" target="_blank" rel="noopener">ngx_http_realip_module</a>,该模块默认没有编译，启用该模块，编译需增加参数 <code>--with-http_realip_module</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Syntax:set_real_ip_from address | CIDR | unix:;</span><br><span class="line">Default:—</span><br><span class="line">Context:http, server, location</span><br></pre></td></tr></table></figure></blockquote></li></ul><blockquote><p>定义信任的地址范围，以启用客户端地址替换</p></blockquote><ul><li>real_ip_header (<a href="http://nginx.org/en/docs/http/ngx_http_realip_module.html#real_ip_header" target="_blank" rel="noopener">官网参考</a>)<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Syntax:real_ip_header field | X-Real-IP | X-Forwarded-For | proxy_protocol;</span><br><span class="line">Default:</span><br><span class="line">real_ip_header X-Real-IP;</span><br><span class="line">Context:http, server, location</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>定义 remote_addr 的替换方式,默认使用 X-Real-IP</p></blockquote>]]></content>
    
    <summary type="html">
    
      nginx 常用指令 access_log,log_format,allow,deny,set_real_ip_from,_
    
    </summary>
    
      <category term="技术" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="nginx" scheme="https://blog.liaohui.info/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>MySql 用户管理和授权</title>
    <link href="https://blog.liaohui.info/2018/11/15/MySql-2/"/>
    <id>https://blog.liaohui.info/2018/11/15/MySql-2/</id>
    <published>2018-11-15T03:24:41.000Z</published>
    <updated>2018-12-21T00:32:23.952Z</updated>
    
    <content type="html"><![CDATA[<h4 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h4><ul><li>创建用户  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'username'</span>@<span class="string">'host'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span>;</span><br><span class="line">    ``` </span><br><span class="line">    &gt;* username:将创建的用户名</span><br><span class="line">    &gt;* host: 指定该用户在哪个主机上可以登陆，如果是本地用户可用localhost，如果想让该用户可以从任意远程主机登陆，可以使用通配符%</span><br><span class="line">    &gt;* password: 用户的登陆密码，密码可以为空，如果为空则该用户可以不需要密码登陆服务器</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* 删除用户</span><br><span class="line">    ```sql</span><br><span class="line">    <span class="keyword">DROP</span> <span class="keyword">USER</span> <span class="string">'username'</span>@<span class="string">'host'</span>;</span><br></pre></td></tr></table></figure></li></ul><ul><li>修改密码  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> <span class="keyword">FOR</span> <span class="string">'username'</span>@<span class="string">'host'</span> = <span class="keyword">PASSWORD</span>(<span class="string">'newpassword'</span>);</span><br><span class="line">``` </span><br><span class="line">修改当前登录用户的密码:</span><br><span class="line">```sql</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> = <span class="keyword">PASSWORD</span>(<span class="string">"newpassword"</span>);</span><br></pre></td></tr></table></figure></li></ul><ul><li>查询  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> host,<span class="keyword">user</span> <span class="keyword">from</span> mysql.user;</span><br></pre></td></tr></table></figure></li></ul><h4 id="授权管理"><a href="#授权管理" class="headerlink" title="授权管理"></a>授权管理</h4><ul><li><p>授予权限<br>  格式: <code>grant 权限 on 数据库对象 to 用户@主机</code></p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">privileges</span> <span class="keyword">ON</span> databasename.tablename <span class="keyword">TO</span> <span class="string">'username'</span>@<span class="string">'host'</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>privileges：操作权限   <pre><code>* SELECT(column,column),INSERT,UPDATE,DELETE   * CREATE,ALTER,DROP    * INDEX,references    * create temporary tables,create view    * create routine,alter routine,execute  </code></pre></li><li>databasename：数据库名</li><li>tablename：表名，如果要授予该用户对所有数据库和表的相应操作权限则可用<em>表示，如</em>.*</li></ul></blockquote></li><li><p>查看授权</p><ul><li><p>查看自己的授权</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">grants</span>;</span><br></pre></td></tr></table></figure></li><li><p>查看其他人的授权</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">grants</span> <span class="keyword">for</span> <span class="string">'user'</span>@<span class="string">'host'</span>;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>撤销授权</p><blockquote><p>类似于授权，将 grant 改为 revoke, to 改为 from 即可</p></blockquote></li></ul><blockquote><ul><li>grant, revoke 某用户权限后，该用户只有重新连接 MySQL 数据库，权限才能生效  </li><li>如果想让授权的用户，也可以将这些权限 grant 给其他用户，需要选项 “grant option“</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      用户管理、授权管理
    
    </summary>
    
      <category term="技术" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="数据库" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySql" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/MySql/"/>
    
    
      <category term="MySql" scheme="https://blog.liaohui.info/tags/MySql/"/>
    
  </entry>
  
  <entry>
    <title>Win2003下安装MySql 5.6.42</title>
    <link href="https://blog.liaohui.info/2018/11/15/Win2003-MySql5-6-42/"/>
    <id>https://blog.liaohui.info/2018/11/15/Win2003-MySql5-6-42/</id>
    <published>2018-11-15T01:03:43.000Z</published>
    <updated>2018-11-15T02:12:34.036Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>下载 <a href="https://dev.mysql.com/downloads/file/?id=481159" target="_blank" rel="noopener">mysql-5.6.42-win32.zip</a>解压到 E:\mysql-5.6.42-win32</p><blockquote><p>操作系统是 32位Win2003&gt;<br>MySql 5.7 会提示“不是有效的 Win32 应用程序”，该版本不适用    </p></blockquote></li><li><p>设置配置文件</p><blockquote><p>复制 my-default.ini 到 my.ini,修改 my.ini   </p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="attr">character_set_server</span>=utf8mb4</span><br><span class="line"><span class="attr">basedir</span>=E:\\mysql-<span class="number">5.6</span>.<span class="number">42</span>-win32</span><br><span class="line"><span class="attr">datadir</span>=E:\\mysqldb\\data</span><br></pre></td></tr></table></figure></blockquote></li></ul><blockquote><p>将MySql安装目录下 data 下所有文件拷贝到 <em>datadir</em>(E:\mysqldb\data) 下</p></blockquote><ul><li>配置 MySql 为系统服务<br>命令符界面下运行<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置为系统服务</span></span><br><span class="line">E:\\mysql-5.6.42-win32\bin\mysqld.exe -install</span><br><span class="line"><span class="comment">#启用MySQL服务</span></span><br><span class="line">net start mysql</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>卸载服务用<code>mysqld.exe -remove</code></p></blockquote><ul><li>配置环境变量<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysdm.cpl</span><br></pre></td></tr></table></figure></li></ul><p>环境变量PATH增加 E:\mysql-5.6.42-win32\bin</p><ul><li>设置MySql初始密码</li></ul><blockquote><p>启动MySql服务后，默认用户 root ， 密码为空, 仅本地登录<br><code>mysql -uroot</code>连接MySql<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">update user <span class="built_in">set</span> password=password(<span class="string">"new password"</span>) <span class="built_in">where</span> user=<span class="string">"root"</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;下载 &lt;a href=&quot;https://dev.mysql.com/downloads/file/?id=481159&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;mysql-5.6.42-win32.zip&lt;/a&gt;解压到 E:\mys
      
    
    </summary>
    
      <category term="技术" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="数据库" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySql" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/MySql/"/>
    
    
      <category term="MySql" scheme="https://blog.liaohui.info/tags/MySql/"/>
    
  </entry>
  
  <entry>
    <title>TP5学习手记2(开发规范和目录结构)</title>
    <link href="https://blog.liaohui.info/2018/11/06/TP5Learn2/"/>
    <id>https://blog.liaohui.info/2018/11/06/TP5Learn2/</id>
    <published>2018-11-06T08:34:42.000Z</published>
    <updated>2018-11-07T01:29:23.638Z</updated>
    
    <content type="html"><![CDATA[<h4 id="开发规范"><a href="#开发规范" class="headerlink" title="开发规范"></a>开发规范</h4><h5 id="目录和文件"><a href="#目录和文件" class="headerlink" title="目录和文件"></a>目录和文件</h5><ul><li>目录命名用 小写 + 下划线</li><li>类库、函数文件统一以.php为后缀</li><li><em>类文件</em>名均以命名空间定义，并且命名空间的路径和类库文件所在路径一致</li><li><em>类文件</em>采用驼峰法命名（首字母大写），其它文件采用小写+下划线命名</li><li><em>类名</em>和<em>类文件</em>名保持一致，统一采用驼峰法命名（首字母大写）</li></ul><h5 id="函数和类、属性命名"><a href="#函数和类、属性命名" class="headerlink" title="函数和类、属性命名"></a>函数和类、属性命名</h5><ul><li>类的命名采用驼峰法（首字母大写），例如 User、UserType，默认不需要添加后缀，例如UserController应该直接命名为User；</li><li>函数的命名使用小写字母和下划线（小写字母开头）的方式，例如 get_client_ip；</li><li>方法的命名使用驼峰法（首字母小写），例如 getUserName；</li><li>属性的命名使用驼峰法（首字母小写），例如 tableName、instance；</li><li>特例：以双下划线<strong>打头的函数或方法作为魔术方法，例如 </strong>call 和 __autoload；</li></ul><h5 id="常量和配置"><a href="#常量和配置" class="headerlink" title="常量和配置"></a>常量和配置</h5><ul><li>常量以大写字母和下划线命名，例如 APP_PATH；</li><li>配置参数以小写字母和下划线命名，例如 url_route_on 和url_convert；</li><li>环境变量定义使用大写字母和下划线命名，例如APP_DEBUG；</li></ul><h5 id="数据表和字段"><a href="#数据表和字段" class="headerlink" title="数据表和字段"></a>数据表和字段</h5><ul><li>数据表和字段采用小写加下划线方式命名，并注意字段名不要以下划线开头，例如 think_user 表和 user_name字段，不建议使用驼峰和中文作为数据表及字段命名。</li></ul><h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">www  WEB部署目录（或者子目录）</span><br><span class="line">├─application           应用目录</span><br><span class="line">│  ├─common             公共模块目录（可以更改）</span><br><span class="line">│  ├─module_name        模块目录</span><br><span class="line">│  │  ├─common.php      模块函数文件</span><br><span class="line">│  │  ├─controller      控制器目录</span><br><span class="line">│  │  ├─model           模型目录</span><br><span class="line">│  │  ├─view            视图目录</span><br><span class="line">│  │  ├─config          配置目录</span><br><span class="line">│  │  └─ ...            更多类库目录</span><br><span class="line">│  │</span><br><span class="line">│  ├─command.php        命令行定义文件</span><br><span class="line">│  ├─common.php         公共函数文件</span><br><span class="line">│  └─tags.php           应用行为扩展定义文件</span><br><span class="line">│</span><br><span class="line">├─config                应用配置目录</span><br><span class="line">│  ├─module_name        模块配置目录</span><br><span class="line">│  │  ├─database.php    数据库配置</span><br><span class="line">│  │  ├─cache           缓存配置</span><br><span class="line">│  │  └─ ...            </span><br><span class="line">│  │</span><br><span class="line">│  ├─app.php            应用配置</span><br><span class="line">│  ├─cache.php          缓存配置</span><br><span class="line">│  ├─cookie.php         Cookie配置</span><br><span class="line">│  ├─database.php       数据库配置</span><br><span class="line">│  ├─log.php            日志配置</span><br><span class="line">│  ├─session.php        Session配置</span><br><span class="line">│  ├─template.php       模板引擎配置</span><br><span class="line">│  └─trace.php          Trace配置</span><br><span class="line">│</span><br><span class="line">├─route                 路由定义目录</span><br><span class="line">│  ├─route.php          路由定义</span><br><span class="line">│  └─...                更多</span><br><span class="line">│</span><br><span class="line">├─<span class="keyword">public</span>                WEB目录（对外访问目录）</span><br><span class="line">│  ├─index.php          入口文件</span><br><span class="line">│  ├─router.php         快速测试文件</span><br><span class="line">│  └─.htaccess          用于apache的重写</span><br><span class="line">│</span><br><span class="line">├─thinkphp              框架系统目录</span><br><span class="line">│  ├─lang               语言文件目录</span><br><span class="line">│  ├─library            框架类库目录</span><br><span class="line">│  │  ├─think           Think类库包目录</span><br><span class="line">│  │  └─traits          系统<span class="keyword">Trait</span>目录</span><br><span class="line">│  │</span><br><span class="line">│  ├─tpl                系统模板目录</span><br><span class="line">│  ├─base.php           基础定义文件</span><br><span class="line">│  ├─convention.php     框架惯例配置文件</span><br><span class="line">│  ├─helper.php         助手函数文件</span><br><span class="line">│  └─logo.png           框架LOGO文件</span><br><span class="line">│</span><br><span class="line">├─extend                扩展类库目录</span><br><span class="line">├─runtime               应用的运行时目录（可写，可定制）</span><br><span class="line">├─vendor                第三方类库目录（Composer依赖库）</span><br><span class="line">├─build.php             自动生成定义文件（参考）</span><br><span class="line">├─composer.json         composer 定义文件</span><br><span class="line">├─LICENSE.txt           授权说明文件</span><br><span class="line">├─README.md             README 文件</span><br><span class="line">├─think                 命令行入口文件</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.kancloud.cn/manual/thinkphp5_1/353949" target="_blank" rel="noopener">官方参考</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      Tp5.1 的开发规范和目录结构
    
    </summary>
    
      <category term="技术" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="PHP" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/PHP/"/>
    
    
      <category term="PHP" scheme="https://blog.liaohui.info/tags/PHP/"/>
    
      <category term="TP5" scheme="https://blog.liaohui.info/tags/TP5/"/>
    
  </entry>
  
  <entry>
    <title>TP5学习手记1(搭建环境)</title>
    <link href="https://blog.liaohui.info/2018/11/02/TP5Learn1/"/>
    <id>https://blog.liaohui.info/2018/11/02/TP5Learn1/</id>
    <published>2018-11-02T00:48:29.000Z</published>
    <updated>2018-12-04T04:32:38.441Z</updated>
    
    <content type="html"><![CDATA[<h4 id="安装-LANMP"><a href="#安装-LANMP" class="headerlink" title="安装 LANMP"></a>安装 LANMP</h4><ul><li><p>安装 Ubuntu 16.04</p></li><li><p>一键包安装，采用<a href="www.wdlinux.cn">wdlinux</a>的一键包</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir wdlinux; <span class="built_in">cd</span> wdliunx </span><br><span class="line">wget http://dl.wdlinux.cn/files/lanmp_v3.tar.gz</span><br><span class="line">tar zxvf lanmp_v3.tar.gz</span><br><span class="line"><span class="comment"># 默认安装的是 PHP5 版本，修改安装的PHP版本为 7.2.11 以及相应下载地址</span></span><br><span class="line">sed -i <span class="string">'s/^PHP_VER.*/PHP_VER="7.2.11"/'</span> lib/common.conf </span><br><span class="line">sed -i <span class="string">'s/^P7.*/P7=1/'</span> lib/common.conf</span><br><span class="line">sed -i <span class="string">'s/^PHP_URL.*/PHP_URL="http:\/\/cn2.php.net\/distributions\/php-7.2.11.tar.gz"/'</span> lib/common.conf </span><br><span class="line"><span class="comment"># 开始安装，选择4全部安装</span></span><br><span class="line">sudo ./lanmp.sh</span><br></pre></td></tr></table></figure><p>安装后，会安装好 nginx，apache，mysql，php，并且可以通过 <a href="http://tp5_learn:8080" target="_blank" rel="noopener">http://服务器IP:8080</a>管理服务器</p><ul><li><p>安装 Pdo_dblib,（用于连接mssql2005）</p><ul><li><p>freeTds</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget ftp://ftp.freetds.org/pub/freetds/stable/freetds-1.00.104.tar.gz</span><br><span class="line">tar zxvf freetds-1.00.104.tar.gz</span><br><span class="line"><span class="built_in">cd</span> freetds-1.00.104/</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/freetds --with-tdsver=7.1 --<span class="built_in">enable</span>-msdblib</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure></li><li><p>安装扩展 pdo_dblib</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/wdlinux/src/</span><br><span class="line">tar zxvf php-7.2.11.tar.gz </span><br><span class="line"><span class="built_in">cd</span> php-7.2.11/ext/pdo_dblib/</span><br><span class="line">/www/wdlinux/php/bin/phpize </span><br><span class="line">sudo ./configure --with-php-config=/www/wdlinux/php/bin/php-config --with-pdo-dblib=/usr/<span class="built_in">local</span>/freetds</span><br><span class="line">sudo make</span><br><span class="line">sudo make install</span><br><span class="line"><span class="comment"># 修改PHP的配置文件，增加扩展 pdo_dblib</span></span><br><span class="line">sed <span class="string">'$a/extension="/www/wdlinux/apache_php-7.2.11/lib/php/extensions/no-debug-non-zts-20170718/pdo_dblib.so"'</span> /www/wdlinux/php/etc/php.ini</span><br><span class="line"><span class="comment"># 检查</span></span><br><span class="line"><span class="built_in">cd</span> ~/;<span class="built_in">echo</span> <span class="string">"&lt;?php phpinfo();"</span>&gt;info.php;</span><br><span class="line">/www/wdlinux/php/bin/php info.php|grep pdo_dblib</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="安装TP5"><a href="#安装TP5" class="headerlink" title="安装TP5"></a>安装TP5</h4><ul><li><p>安装 composer</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -sS https://getcomposer.org/installer | php</span><br><span class="line">mv composer.phar /usr/<span class="built_in">local</span>/bin/composer</span><br><span class="line"><span class="comment">#使用国内镜像</span></span><br><span class="line">composer config -g repo.packagist composer https://packagist.phpcomposer.com</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">composer config -g repo.packagist composer https://packagist.laravel-china.org</span><br></pre></td></tr></table></figure></li><li><p>创建TP5项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project topthink/think tp5</span><br></pre></td></tr></table></figure></li><li><p>更新TP5框架</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer update topthink/framework</span><br></pre></td></tr></table></figure></li><li><p>修改框架以支持dblib连接Sqlsrv<br>修改think\db\connector下的类Sqlsrv的parseDsn方法为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$dsn = <span class="string">'dblib:dbname='</span> . $config[<span class="string">'database'</span>] . <span class="string">';host='</span> . $config[<span class="string">'hostname'</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($config[<span class="string">'hostport'</span>])) &#123;</span><br><span class="line">    <span class="comment">//$dsn .= ',' . $config['hostport'];</span></span><br><span class="line">    $dsn .= <span class="string">':'</span> . $config[<span class="string">'hostport'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $dsn;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p><a href="https://wdlinux.cn/lanmp/install.html" target="_blank" rel="noopener">wdlinux一键包官网参考</a><br><a href="http://www.freetds.org/files/stable/" target="_blank" rel="noopener">freetds稳定包下载</a><br>本地下载<a href="/download/lanmp_v3.tar.gz">lanmp_v3.tar.gz</a><br>本地下载<a href="/download/freetds-1.00.104.tar.gz">freetds-1.00.104.tar.gz</a><br>官方手册<a href="https://www.kancloud.cn/manual/thinkphp5_1" target="_blank" rel="noopener">ThinkPHP5.1完全开发手册</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      安装lanmp，composer，tp5
    
    </summary>
    
      <category term="技术" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="PHP" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/PHP/"/>
    
    
      <category term="PHP" scheme="https://blog.liaohui.info/tags/PHP/"/>
    
      <category term="TP5" scheme="https://blog.liaohui.info/tags/TP5/"/>
    
  </entry>
  
  <entry>
    <title>2018年8月贵州行</title>
    <link href="https://blog.liaohui.info/2018/10/12/GuiZhou201808/"/>
    <id>https://blog.liaohui.info/2018/10/12/GuiZhou201808/</id>
    <published>2018-10-12T00:39:59.000Z</published>
    <updated>2018-10-17T07:20:36.935Z</updated>
    
    <content type="html"><![CDATA[<h3 id="8月11日贵阳北站"><a href="#8月11日贵阳北站" class="headerlink" title="8月11日贵阳北站"></a>8月11日贵阳北站</h3><blockquote><p>下午5点贵阳北，好大的贵阳北站！休息一个半小时转车遵义，本想到车站附近找点特色小吃，步行半小时都没出站，放弃了，在车站吃的晚餐，果然即贵又不好吃。</p></blockquote><p><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180811_173253.jpg?imageslim" alt=""></p><h3 id="8月12日遵义"><a href="#8月12日遵义" class="headerlink" title="8月12日遵义"></a>8月12日遵义</h3><blockquote><p>阳光明媚，天气很好，早上吃了遵义虾子羊肉粉，真的好好吃，和湖南吃到的遵义羊肉粉完全是两个味儿,感谢小娟同学的款待和全程陪同</p></blockquote><h4 id="遵义会址"><a href="#遵义会址" class="headerlink" title="遵义会址"></a>遵义会址</h4><p><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180812_093437.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180812_093357.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180812_093841.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180812_094830.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180812_095410.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180812_095837.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180812_100052.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180812_093935.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180812_101155.jpg?imageslim" alt=""></p><h4 id="红军山"><a href="#红军山" class="headerlink" title="红军山"></a>红军山</h4><blockquote><p>遵义会址出来后，步行到红军山，从红军山山脚一直爬到凤凰楼，脚不是自己的了,两个小伙子表现出众</p></blockquote><p><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180812_123143.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180812_123200.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180812_125423.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180812_125542.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180812_135514.jpg?imageslim" alt=""></p><h3 id="8月13日回到贵阳"><a href="#8月13日回到贵阳" class="headerlink" title="8月13日回到贵阳"></a>8月13日回到贵阳</h3><p><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180813_144247.jpg?imageslim" alt=""></p><blockquote><p>进贵阳高铁上拍的，很壮观，很现代</p></blockquote><p><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180813_194538.jpg?imageslim" alt="" title="二七路小吃街"></p><blockquote><p>二七路小吃街用的晚餐，贵州小吃一条吃，目不暇接</p></blockquote><h4 id="8月14日贵阳黔灵山公园"><a href="#8月14日贵阳黔灵山公园" class="headerlink" title="8月14日贵阳黔灵山公园"></a>8月14日贵阳黔灵山公园</h4><p><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180814_084041.jpg?imageslim" alt=""></p><blockquote><p>早餐花溪牛肉粉，名不虚传</p></blockquote><p><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180814_082629.jpg?imageslim" alt=""></p><blockquote><p>贵州特色，花椒粉，自己添加</p></blockquote><p><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180814_091421.jpg?imageslim" alt=""></p><blockquote><p>黔灵山公园大门</p></blockquote><p><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180814_114349.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180814_125211.jpg?imageslim" alt=""></p><blockquote><p>好多猴子，萌猴</p></blockquote><p><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180814_145600.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180814_145607.jpg?imageslim" alt=""></p><blockquote><p>侗家食府用的午餐，点了特色酸汤鱼，太重的山胡椒油味，最后还是经典的青椒炒肉下饭</p></blockquote><p><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180814_210440.jpg?imageslim" alt=""></p><h4 id="8月15日西江苗寨"><a href="#8月15日西江苗寨" class="headerlink" title="8月15日西江苗寨"></a>8月15日西江苗寨</h4><blockquote><p>非常浓郁的苗族气息,一路上一会儿天晴一会儿小雨，小雨儿一阵阵的，果然是贵州天无三日晴</p></blockquote><p><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180815_123311.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180815_123335.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180815_140026.jpg?imageslim" alt=""></p><blockquote><p>苗族长桌宴</p></blockquote><p><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180815_170141.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180815_170300.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180815_190556.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180815_202605.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180815_202645.jpg?imageslim" alt=""></p><h4 id="8月16日小七孔"><a href="#8月16日小七孔" class="headerlink" title="8月16日小七孔"></a>8月16日小七孔</h4><p><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180816_093638.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180816_115312.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180816_141523.jpg?imageslim" alt=""></p><h4 id="8月17日黄果树瀑布"><a href="#8月17日黄果树瀑布" class="headerlink" title="8月17日黄果树瀑布"></a>8月17日黄果树瀑布</h4><p><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180817_093729.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180817_103040.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180817_105329.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180817_103655.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180817_105440.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180817_135253.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180817_135305.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180817_135943.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180817_140002.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180817_150203.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180817_150244.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180817_150316.jpg?imageslim" alt=""><br><img src="http://pggvp54ju.bkt.clouddn.com/IMG_20180817_150602.jpg?imageslim" alt=""></p>]]></content>
    
    <summary type="html">
    
      赵总要去遵义看朋友小娟，一家老小5人热心陪同...
    
    </summary>
    
      <category term="生活" scheme="https://blog.liaohui.info/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="旅游" scheme="https://blog.liaohui.info/categories/%E7%94%9F%E6%B4%BB/%E6%97%85%E6%B8%B8/"/>
    
    
      <category term="贵州" scheme="https://blog.liaohui.info/tags/%E8%B4%B5%E5%B7%9E/"/>
    
  </entry>
  
  <entry>
    <title>配置 Hexo</title>
    <link href="https://blog.liaohui.info/2018/10/11/configure-hexo-1/"/>
    <id>https://blog.liaohui.info/2018/10/11/configure-hexo-1/</id>
    <published>2018-10-11T07:40:55.000Z</published>
    <updated>2018-11-06T00:03:20.843Z</updated>
    
    <content type="html"><![CDATA[<h3 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h3><ul><li>设定语言<br>编辑站点配置文件，language: zh_CN</li></ul><h3 id="安装主题-next"><a href="#安装主题-next" class="headerlink" title="安装主题 next"></a>安装主题 next</h3><ul><li><p>下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next.git themes/next</span><br></pre></td></tr></table></figure></li><li><p>启用主题</p><blockquote><p>修改站点配置文件， 找到 theme ，并将其值更改为 next</p></blockquote></li></ul><a id="more"></a><h3 id="配置主题-next"><a href="#配置主题-next" class="headerlink" title="配置主题 next"></a>配置主题 next</h3><ul><li><p>选择 Scheme</p><blockquote><p>修改主题配置文件</p></blockquote></li><li><p>增加分类页、标签页</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"categories"</span></span><br><span class="line">hexo new page <span class="string">"tags"</span></span><br></pre></td></tr></table></figure></li><li><p>修改page “categories”的 front_matter 如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>: <span class="string">"categories"</span></span><br><span class="line">comments: <span class="literal">false</span> <span class="comment">#关闭评论</span></span><br></pre></td></tr></table></figure></li><li><p>修改page “tags”的 front_matter 如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>: <span class="string">"tags"</span></span><br><span class="line">comments: <span class="literal">false</span></span><br></pre></td></tr></table></figure></li><li><p>设置菜单</p><blockquote><p>菜单增加“分类”、“标签”<br>  编辑主题配置文件,找到如下配置，去掉注释#</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#tags: /tags/ || tags</span></span><br><span class="line"><span class="comment">#categories: /categories/ || th</span></span><br></pre></td></tr></table></figure></blockquote></li><li><p>代码块增加按钮“复制”</p><blockquote><p>修改主题配置文件<br>codeblock.copy_button.enable = true</p></blockquote></li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">next官网</a></li><li><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo中文</a></li></ul>]]></content>
    
    <summary type="html">
    
      下载和配置新的主题next，设置语言，配置分类页、标签页,设置代码复制
    
    </summary>
    
      <category term="技术" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="其他" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="hexo" scheme="https://blog.liaohui.info/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Github + Hexo + Win7 安装手记</title>
    <link href="https://blog.liaohui.info/2018/10/10/Github_Hexo/"/>
    <id>https://blog.liaohui.info/2018/10/10/Github_Hexo/</id>
    <published>2018-10-10T01:32:47.590Z</published>
    <updated>2018-10-12T00:18:07.021Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3><ul><li><a href="http://nodejs.cn/" target="_blank" rel="noopener">nodejs</a></li><li><a href="https://git-scm.com/" target="_blank" rel="noopener">git</a></li></ul><a id="more"></a><h3 id="注册配置Github"><a href="#注册配置Github" class="headerlink" title="注册配置Github"></a>注册配置<a href="https://github.com/" target="_blank" rel="noopener">Github</a></h3><ul><li><p>创建仓库(名称为 注册名.github.io)</p></li><li><p>配置SSH Key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在~/.ssh下生成id_rsa私钥和id_rsa.pub公钥</span></span><br><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">"email地址"</span> </span><br><span class="line">clip.exe &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>  将剪贴板上的公钥部署到github中的 ssh key,实现免密部署</p></li></ul><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><ul><li><p>建立文件夹 D:\hexo，Git Bash Here</p></li><li><p>安装 hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>建站</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li><p>配置部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git--save <span class="comment">#支持hexo的git部署</span></span><br></pre></td></tr></table></figure><p>打开文件 _config.yml,修改部署配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改为git部署,注意：号后面必须带半角的空格</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:注册名/注册名.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean <span class="comment">#清除原来生成的静态内容</span></span><br><span class="line">hexo generate <span class="comment">#生成静态网页</span></span><br><span class="line">hexo deploy <span class="comment">#部署到github</span></span><br></pre></td></tr></table></figure><p>此时可以打开 https://注册名.github.io 了，看到个人博客了</p></li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo中文</a></li></ul>]]></content>
    
    <summary type="html">
    
      终于有一天，想找个地方写下些东西，也许这个是不一样的开始，就从搭建这个博客网站开始吧
    
    </summary>
    
      <category term="技术" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="其他" scheme="https://blog.liaohui.info/categories/%E6%8A%80%E6%9C%AF/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="hexo" scheme="https://blog.liaohui.info/tags/hexo/"/>
    
  </entry>
  
</feed>
